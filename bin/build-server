#! /usr/bin/env node
const pretty = require('pretty-error')
const webpack = require('webpack')
const path = require('path')
const fs = require('fs')

const sb = require('storyboard')

const { mainStory, chalk } = sb

const defaultConfig = require('../config/backpack.config')

process.on('SIGINT', process.exit)

const options = {
  env: 'production'
}

const configPath = path.resolve('f3.config.js')
let userConfig = {}

console.log('using config path ', configPath)
mainStory.info('using config path ', configPath)

if (fs.existsSync(configPath)) {
  const userConfigModule = require(configPath)
  userConfig = userConfigModule.default || userConfigModule
}

const serverConfig = userConfig.backpack
    ? userConfig.backpack(defaultConfig(options), options, webpack)
    : defaultConfig(options)

const serverCompiler = webpack(serverConfig)

serverCompiler.run((error, stats) => {
  if (error || stats.hasErrors()) {
  	const pe = new pretty()
    console.error('serverCompiler error')
    console.error(pe.render(error))
    process.exitCode = 1;
  }
})